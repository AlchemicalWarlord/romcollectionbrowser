

= Prio 1 =
== General ==
- rework of config.xml
	- Platform instead of RomCollection?
	- Add sources like for files in XBMC?
	- Add region information to source?
	- Add several launcher configurations to one RC/Platform entry (and store launcher per game in db)?

== Datamodel ==
- add all possible properties to dataobjects
- decide if year should be stored as flat property (not as own entity)
- date format

== Scraping/Import==
- support importing of more than one platform (find game and add releases)
- implement all possible properties and entities for all scrapers
- add region filter (get region from rom collection, rom name, rom file, ...)

== Launching ==

== UI/Browsing ==
- decide if imageplacing should be completely removed
	- <texture>$INFO[ListItem.Property(gameinfolowerleft)]</texture>
	- <texture>$INFO[ListItem.Property(boxfront)]</texture>
- decide how to support fallback artwork (general screenshot if no special screenshot is available etc.)


= Prio 2 =
== General ==
- Export game database (nfo files)
== Datamodel ==
- add extra info for arcade machines (separate table or properties in platform?)
- add source (site or url) to downloaded files

== Scraping ==
- add config option for number of artwork files (screenshots)
- add config option for number of items (persons, ...)
- add config option to ignore artwork from certain scrapers

== Launching ==

== UI/Browsing ==


= Prio 3 =
== General ==

== Datamodel ==

== Scraping ==

== Launching ==

== UI/Browsing ==


	
General

  * NFO files don't update when rescraping games. - Add option to overwrite
  * export nfo files on demand
    * option to overwrite existing files
    * option to export statisitcal or user specific data (isFavorite, launchCount, ...)
  * remove MAWS scraper from config.xml
  
Scraping/Datamodel
  * add new MAME scraper
  * manually enter name of scraped game (rescrape or interactive)
  * game logo or game name logo
  * support different releases (region, updates, etc.)
    * region support
      * add region flag per rom collection (also ALL option)
      * determine region per game (e.g. [US] or (US) in name)
      * store different releases in 1 zip or 7z file (look inside file and mark game as available?)
      * support selection of similar named versions of games (select version to import by user or mask)
	    Final Fantasy III (USA) (Beta).zip
	    Final Fantasy III (USA) (Rev 1).zip
	    Final Fantasy III (USA).zip
  * select artwork during import
  * have the collection name and the name sent to the scraper be different settings. That way, I could have a "supermodel3" collection, but scrap the roms as "mame" roms.
  * option to create sub collections: best sports games, ...
  * refactor dbupdate (requires data model changes)
    * easier handling of default images, publisher, dev and RC images
    * divide data and artwork scraper
    * new scraper property: online, local
    * support for audio files
    * artwork quality
    * test all scraping options (search game by crc, use filename as crc, ...)
      * no settings needed?
  * store viewstate on RC basis
      * save view per Rom Collection (favorite view per romcollection)
  * build game groups (releases and sequels)
    * collect minimal game data for missing games in game group (even if certain roms are not present)
  * mark game as completed
  * mark game as broken (in db + .broken in filename)
  * lastplayed
  * date added
  * lastmodified
  * rating (ESRB, PEGI, etc.)
  * divide outline and plot
  * use more than 1 screenshot
  * support 2 or more developers
  * two-step import: 1. local data, 2. online data
  * change emulators per game/gamegroup

  
Browse
  * Use gameview in database
  * Console view / dash board
  * add filter MaxPlayers (complete filter rework)
  