= Features =
== game import / scraping ==
=== general ===

 * easier handling of default images (per romcollection)
 * manual scraping games (update properties and images)
 * easy to use option to rescrape missing games
 * stop searching when all games are found
 * check if import desc file with %GAME% still works with config wizard
 * more Disk indicators for multi rom scenario (Disk %I)
 * delete missing games from db (batch and single)
 * check special chars (ä, è) in pathes
 * Giantbomb API: check type of image/platform (current version is not platform safe)
	-> Result contains Releases
		-> loop releases and check for correct platform
		-> use release date and image of this release		

 * add mame support
 * add replace options as global option
 * db structure: extra properties for outline und plot (atm only description)
 * get back more than one URL in 1 Result? (e.g. BackCover, FrontCover, ...)
 * ,-separated list in scraper (e.g. more than genre on mobygames are ignored)
 * foldernamefromCRC (implementation looks strange)
 * new option: build crc from complete zip or first entry
 * backup mygames.db before update
 * new db field %RATING%
 * file browser mode
 * config file per game
 * manual and faq browser

		
=== implement new Scrapers (already checked) ===
 * http://api.archive.vg/1.0/Game.getInfoByCRC/APIKEY/f9394e97 

=== sites to check for scraping ===
 * RFGeneration.com
 * http://www.gametrailers.com
 * http://www.thecoverproject.net
 * http://www.eurogamer.net/
 * http://www.gamespot.com
 * http://www.gamerankings.com
 * http://maws.mameworld.info/maws/

 * http://www.gamefaqs.com/ (Forbidden in Terms of use) (Request for permission: #101113-000033, no answer) 
 * http://www.allgame.com/ (Forbidden in Terms of use) (mail written, no answer)



== game browsing / general UI features ==
 * use context menu
	 * Addon settings
	 * Add RomCollection
 * improve progress dialog
	 * import rom collection 1/1 SNES...
	 * import game: spiderman
	 * current scraper: mobygames.com, download artwork, ...
 * rework current skins
 * create new skins
 * filter control interaction
 * search games by textbox
 * mark game as completed
 * favorites function
 * short delay before applying filter selection
 * pause video when importing games, changing view or filter selection
 * complete settings dialog (all RomCollection properties)
 * option to edit game properties
 * handle different image sizes
 * default image if there is no video found
 * more image placing options: upper, lower, left, right
 * favorite view per romcollection
 * gloss covers on/off
 * option: Autoplay video
 * option: Autoscroll description
 * highlight filter selection
 * if game has url: option to launch in browser
 * more than one image per control
 * loop videos (stop and start video causes list to refresh)


== game launching ==
 * extract zip and .7z files (integrate quakes fixes)
 * check for {} in multi rom scenario (multi rom but no brackets in emuCmd -> error)
 * ignore multi rom scenario (f.e. mame)
 * focus not on gamelist after launchemu (problem only on windows?)
 * command before launch and after launch(f.e. load virtual cd drive, unload virtual cd drive)


= Refactoring / implementation details =
 * move scraper code to separate module
 * move launcher code to separate moule
 * new logLevel: ALWAYS
 * consequent use of constants/enums


= Tests =
 * add more real unit test after refactoring
 * DescParser
	 * getFlatFile
	 * getXML
	 * getUnknown
	 * readFileLocal
	 * readFileWeb
 * DescParserFlatFile
	 * parseDescPerGame
	 * parseDescForAllGames
 * gamename with &

= Documentation =
 * video tut for local data test suite
 * Improving scrape results
 * Import local nfo files
 * Use RCB to launch standalone games
 * Add new Rom Collections (without wizard)
 * Mixing online and offline scrapers
 * List of emus with command line parameters and known issues
 * HOWTO: create a useful log file
 * HOWTO: troubleshoot launching problems
 * FAQ